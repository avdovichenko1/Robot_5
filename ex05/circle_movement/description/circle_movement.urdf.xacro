<?xml version="1.0"?>
<robot name="robot" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:include filename="gazebo.urdf.xacro"/>
  <!-- Define robot constants -->
  <xacro:property name="base_width" value="0.42"/>
  <xacro:property name="base_length" value="0.32"/>
  <xacro:property name="base_height" value="0.53"/>

  <xacro:property name="wheel_radius" value="0.20"/>
  <xacro:property name="wheel_width" value="0.04"/>
  <xacro:property name="wheel_ygap" value="0.025"/>
  <xacro:property name="wheel_zoff" value="0.05"/>
  <xacro:property name="wheel_xoff" value="0.12"/>
  
  <xacro:property name="head_width" value="0.12"/>
  <xacro:property name="head_length" value="0.12"/>
  <xacro:property name="head_height" value="0.12"/>
  <xacro:property name="head_ygap" value="0.3"/>
  <xacro:property name="head_zoff" value="0.53"/>
  <xacro:property name="head_xoff" value="0.22"/>

  <xacro:property name="caster_xoff" value="0.24"/>
  
   <!-- Define intertial property macros  -->
  <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="sphere_inertia" params="m r">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <!-- Robot Base -->
  <link name="base_link">
    <visual>
      <origin xyz="0 0 ${base_height/2}"/>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <material name="Brown">
        <color rgba="0.647 0.165 0.165 0.5"/>
      </material>
    </visual>
    
    <collision>
      <origin xyz="0 0 ${base_height/2}"/>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>

    <xacro:box_inertia m="15" w="${base_width}" d="${base_length}" h="${base_height}"/>
  </link>

  <!-- Robot Footprint -->
  <link name="base_footprint"/>

  <joint name="base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_footprint"/>
    <origin xyz="0.0 0.0 ${-(wheel_radius+wheel_zoff)}" rpy="0 0 0"/>
  </joint>
  
  <!-- Wheels -->
  <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
    <link name="${prefix}_link">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
            <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="Black">
          <color rgba="0.0 0.0 0.0 1.0"/>
        </material>
      </visual>
      
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>

      <xacro:cylinder_inertia m="0.5" r="${wheel_radius}" h="${wheel_width}"/>
    </link>

    <joint name="${prefix}_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${prefix}_link"/>
      <origin xyz="${x_reflect*wheel_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${-wheel_zoff}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro>

  <xacro:wheel prefix="drivewhl_l" x_reflect="-1" y_reflect="1" />
  <xacro:wheel prefix="drivewhl_m" x_reflect="1" y_reflect="0" />
  <xacro:wheel prefix="drivewhl_r" x_reflect="-1" y_reflect="-1" />
  
  <xacro:macro name="head" params="prefix x_reflect y_reflect">
    <link name="${prefix}_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/> <!-- Adjust the origin and orientation as needed -->
            <geometry>
                <box size="${head_length} ${head_width} ${head_height}"/> <!-- Use the defined properties for size -->
            </geometry>
            <material name="Red">
                <color rgba="1.0 0.0 0.0 1.0"/> <!-- Adjust the color as needed -->
            </material>
        </visual>
        
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/> <!-- Adjust the origin and orientation as needed -->
            <geometry>
                <box size="${head_length} ${head_width} ${head_height}"/> <!-- Use the defined properties for size -->
            </geometry>
        </collision>

        <!-- Modify the inertia properties based on the size and mass of the head -->
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0"/> <!-- Adjust the origin and orientation as needed -->
            <mass value="1"/> <!-- Adjust the mass as needed -->
            <!-- Adjust the inertia properties based on the size and mass of the head -->
            <inertia ixx="${(1/12) * (head_height*head_height + head_width*head_width)}" 
                     ixy="0.0" 
                     ixz="0.0" 
                     iyy="${(1/12) * (head_length*head_length + head_height*head_height)}" 
                     iyz="0.0" 
                     izz="${(1/12) * (head_length*head_length + head_width*head_width)}"/>
        </inertial>
    </link>

    <joint name="${prefix}_joint" type="fixed">
        <parent link="base_link"/>
        <child link="${prefix}_link"/>
        <!-- Use the defined properties for position -->
        <origin xyz="${x_reflect*head_xoff} ${y_reflect*(base_width/2+head_ygap)} ${head_zoff+head_height/2-0.01}" rpy="0 0 0"/> 
        <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro>

  <xacro:head prefix="heady" x_reflect="0" y_reflect="0" />



</robot>
